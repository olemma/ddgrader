#A configuration file for ddgrader
#this will be parsed by python3's configparser with ExtendedInterpolation (can sub stuff with ${section:var})

[setup]
dds_pickle_name=.dds.pkl

#name of the copy of design document in students/
design_doc_name=design_doc.txt

#name of symlink to alphabetically prior feedback forms
partner_pattern=group%d_doc.txt

#name of symlink to groups' code
code_name=code

#name of directory created by setup will hold students/eid1 students/eid2, etc.
student_dir=students

#path of grading template to copy into student directories
feedback_template=template.txt

#feedback_template will be renamed to this inside student directories
feedback_name=feedback.txt

#anyone at or below this ranking is reported by setup
report_ranking=marginal

[grader]
#grader will open the specified editor for you to do the grading
#it builds the command as editor editor_args feedback, design_doc, group member design docs editor_rel_files editor_abs_files
#i.e. 
#editor = vim
#editor_args=-p
#editor_rel_files=${setup:code_name}/msh.c
#editor_abs_files=responses.txt
#
# the command line would be while grading a student with eid awk22 
# 	vim -p ./students/awk22/feedback.txt ./students/awk22/design_doc.txt \
#	./students/awk22/group0_doc.txt ./students/awk22/code/msh.c responses.txt
editor=vim

#comma separated list
editor_args=-p

#comma separated list, these will be prefixed by student/eid directory
editor_rel_files=${setup:code_name}/msh.c

#comma separated list. These are other non-student specific files that will be opened.
editor_abs_files=responses.txt

grader_pickle_name=.grader.pkl

#Regex to find the students' total grade via ddgrader collect. must include ?P<grade>
grade_regex=Total\sGrade:\s*(?P<grade>\d+)

#column in the downloaded grade spreadsheet that the grade will be written to (the column for this project's design doc)
#find this by downloading the grade spreadsheet and looking up the correct column (perhaps in excel?) 0-indexed
grade_column=17
